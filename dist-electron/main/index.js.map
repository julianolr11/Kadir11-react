{"version":3,"file":"index.js","sources":["../../electron/main/update.ts","../../electron/main/index.ts"],"sourcesContent":["import { app, ipcMain } from 'electron'\r\nimport { createRequire } from 'node:module'\r\nimport type {\r\n  ProgressInfo,\r\n  UpdateDownloadedEvent,\r\n  UpdateInfo,\r\n} from 'electron-updater'\r\n\r\nconst { autoUpdater } = createRequire(import.meta.url)('electron-updater');\r\n\r\nexport function update(win: Electron.BrowserWindow) {\r\n\r\n  // When set to false, the update download will be triggered through the API\r\n  autoUpdater.autoDownload = false\r\n  autoUpdater.disableWebInstaller = false\r\n  autoUpdater.allowDowngrade = false\r\n\r\n  // start check\r\n  autoUpdater.on('checking-for-update', function () { })\r\n  // update available\r\n  autoUpdater.on('update-available', (arg: UpdateInfo) => {\r\n    win.webContents.send('update-can-available', { update: true, version: app.getVersion(), newVersion: arg?.version })\r\n  })\r\n  // update not available\r\n  autoUpdater.on('update-not-available', (arg: UpdateInfo) => {\r\n    win.webContents.send('update-can-available', { update: false, version: app.getVersion(), newVersion: arg?.version })\r\n  })\r\n\r\n  // Checking for updates\r\n  ipcMain.handle('check-update', async () => {\r\n    if (!app.isPackaged) {\r\n      const error = new Error('The update feature is only available after the package.')\r\n      return { message: error.message, error }\r\n    }\r\n\r\n    try {\r\n      return await autoUpdater.checkForUpdatesAndNotify()\r\n    } catch (error) {\r\n      return { message: 'Network error', error }\r\n    }\r\n  })\r\n\r\n  // Start downloading and feedback on progress\r\n  ipcMain.handle('start-download', (event: Electron.IpcMainInvokeEvent) => {\r\n    startDownload(\r\n      (error, progressInfo) => {\r\n        if (error) {\r\n          // feedback download error message\r\n          event.sender.send('update-error', { message: error.message, error })\r\n        } else {\r\n          // feedback update progress message\r\n          event.sender.send('download-progress', progressInfo)\r\n        }\r\n      },\r\n      () => {\r\n        // feedback update downloaded message\r\n        event.sender.send('update-downloaded')\r\n      }\r\n    )\r\n  })\r\n\r\n  // Install now\r\n  ipcMain.handle('quit-and-install', () => {\r\n    autoUpdater.quitAndInstall(false, true)\r\n  })\r\n}\r\n\r\nfunction startDownload(\r\n  callback: (error: Error | null, info: ProgressInfo | null) => void,\r\n  complete: (event: UpdateDownloadedEvent) => void,\r\n) {\r\n  autoUpdater.on('download-progress', (info: ProgressInfo) => callback(null, info))\r\n  autoUpdater.on('error', (error: Error) => callback(error, null))\r\n  autoUpdater.on('update-downloaded', complete)\r\n  autoUpdater.downloadUpdate()\r\n}\r\n","import { app, BrowserWindow, shell, ipcMain } from 'electron'\r\nimport fs from 'node:fs'\r\nimport Store from 'electron-store'\r\nimport { createRequire } from 'node:module'\r\nimport { fileURLToPath } from 'node:url'\r\nimport path from 'node:path'\r\nimport os from 'node:os'\r\nimport { update } from './update'\r\n\r\nconst require = createRequire(import.meta.url)\r\nconst __dirname = path.dirname(fileURLToPath(import.meta.url))\r\n\r\n// The built directory structure\r\n//\r\n// ├─┬ dist-electron\r\n// │ ├─┬ main\r\n// │ │ └── index.js    > Electron-Main\r\n// │ └─┬ preload\r\n// │   └── index.js    > Preload-Scripts\r\n// ├─┬ dist\r\n// │ └── index.html    > Electron-Renderer\r\n//\r\nprocess.env.APP_ROOT = path.join(__dirname, '../..')\r\n\r\nexport const MAIN_DIST = path.join(process.env.APP_ROOT, 'dist-electron')\r\nexport const RENDERER_DIST = path.join(process.env.APP_ROOT, 'dist')\r\nexport const VITE_DEV_SERVER_URL = process.env.VITE_DEV_SERVER_URL\r\n\r\nprocess.env.VITE_PUBLIC = VITE_DEV_SERVER_URL\r\n  ? path.join(process.env.APP_ROOT, 'public')\r\n  : RENDERER_DIST\r\n\r\n// Disable GPU Acceleration for Windows 7\r\nif (os.release().startsWith('6.1')) app.disableHardwareAcceleration()\r\n\r\n// Set application name for Windows 10+ notifications\r\nif (process.platform === 'win32') app.setAppUserModelId(app.getName())\r\n\r\nif (!app.requestSingleInstanceLock()) {\r\n  app.quit()\r\n  process.exit(0)\r\n}\r\n\r\nlet win: BrowserWindow | null = null\r\n// Use the project root for the preload script instead of `dist-electron`\r\n// to avoid issues with missing files when running the application in\r\n// development.\r\nconst preload = path.join(process.env.APP_ROOT!, 'preload.js')\r\nconst indexHtml = path.join(RENDERER_DIST, 'index.html')\r\n\r\nasync function createWindow() {\r\n  win = new BrowserWindow({\r\n    title: 'Kadir11',\r\n    icon: path.join(process.env.VITE_PUBLIC, 'favicon.ico'),\r\n    width: 1536,\r\n    height: 1024,\r\n    resizable: false,\r\n    maximizable: true,\r\n    autoHideMenuBar: true,\r\n    webPreferences: {\r\n      preload,\r\n      contextIsolation: true,\r\n      nodeIntegration: false,\r\n    },\r\n  })\r\n\r\n  // Ensure the default menu bar is hidden\r\n  win.setMenuBarVisibility(false)\r\n\r\n  if (VITE_DEV_SERVER_URL) { // #298\r\n    win.loadURL(VITE_DEV_SERVER_URL)\r\n    // Open devTool if the app is not packaged\r\n    win.webContents.openDevTools()\r\n  } else {\r\n    win.loadFile(indexHtml)\r\n  }\r\n\r\n  // Test actively push message to the Electron-Renderer\r\n  win.webContents.on('did-finish-load', () => {\r\n    win?.webContents.send('main-process-message', new Date().toLocaleString())\r\n  })\r\n\r\n  // Make all links open with the browser, not with the application\r\n  win.webContents.setWindowOpenHandler(({ url }) => {\r\n    if (url.startsWith('https:')) shell.openExternal(url)\r\n    return { action: 'deny' }\r\n  })\r\n\r\n  // Auto update\r\n  update(win)\r\n}\r\n\r\napp.whenReady().then(createWindow)\r\n\r\napp.on('window-all-closed', () => {\r\n  win = null\r\n  if (process.platform !== 'darwin') app.quit()\r\n})\r\n\r\napp.on('second-instance', () => {\r\n  if (win) {\r\n    // Focus on the main window if the user tried to open another\r\n    if (win.isMinimized()) win.restore()\r\n    win.focus()\r\n  }\r\n})\r\n\r\napp.on('activate', () => {\r\n  const allWindows = BrowserWindow.getAllWindows()\r\n  if (allWindows.length) {\r\n    allWindows[0].focus()\r\n  } else {\r\n    createWindow()\r\n  }\r\n})\r\n\r\n// New window example arg: new windows url\r\nipcMain.handle('open-win', (_, arg) => {\r\n  const childWindow = new BrowserWindow({\r\n    webPreferences: {\r\n      preload,\r\n      nodeIntegration: true,\r\n      contextIsolation: false,\r\n    },\r\n  })\r\n\r\n  if (VITE_DEV_SERVER_URL) {\r\n    childWindow.loadURL(`${VITE_DEV_SERVER_URL}#${arg}`)\r\n  } else {\r\n    childWindow.loadFile(indexHtml, { hash: arg })\r\n  }\r\n})\r\n\r\nipcMain.handle('quit-app', () => {\r\n  app.quit()\r\n})\r\n\r\nconst store = new Store()\r\n\r\nipcMain.handle('save-character', (_event, data) => {\r\n  store.set('selectedCharacter', data)\r\n})\r\n\r\nipcMain.handle('get-pet-assets', (_event, especie: string, elemento: string) => {\r\n  const base = path.join(process.env.APP_ROOT, 'Assets', 'Mons')\r\n  const sanitize = (name: string) =>\r\n    name\r\n      .normalize('NFD')\r\n      .replace(/[\\u0300-\\u036f]/g, '')\r\n      .replace(/\\s+/g, '')\r\n  const specieDir = path.join(base, sanitize(especie))\r\n\r\n  const pickPetDir = (dir: string): string | undefined => {\r\n    if (!fs.existsSync(dir)) return undefined\r\n    const candidates = fs\r\n      .readdirSync(dir, { withFileTypes: true })\r\n      .filter(d => d.isDirectory())\r\n      .map(d => d.name)\r\n    if (!candidates.length) return undefined\r\n    const chosen = candidates[Math.floor(Math.random() * candidates.length)]\r\n    const gif = path.join(dir, chosen, 'front.gif')\r\n    if (fs.existsSync(gif)) return path.relative(process.env.APP_ROOT, gif).replace(/\\\\/g, '/')\r\n    const png = path.join(dir, chosen, 'front.png')\r\n    if (fs.existsSync(png)) return path.relative(process.env.APP_ROOT, png).replace(/\\\\/g, '/')\r\n    return undefined\r\n  }\r\n\r\n  let assetPet = pickPetDir(path.join(specieDir, elemento))\r\n\r\n  if (!assetPet) {\r\n    const subdirs = fs\r\n      .readdirSync(specieDir, { withFileTypes: true })\r\n      .filter(d => d.isDirectory())\r\n      .map(d => d.name)\r\n    for (const sub of subdirs) {\r\n      const candidate = pickPetDir(path.join(specieDir, sub))\r\n      if (candidate) {\r\n        assetPet = candidate\r\n        break\r\n      }\r\n    }\r\n  }\r\n\r\n  const evoMp4 = path.join(base, 'evolution.mp4')\r\n  const evoGif = path.join(base, 'evolution.gif')\r\n  const animacaoEvolucao = fs.existsSync(evoMp4)\r\n    ? path.relative(process.env.APP_ROOT, evoMp4).replace(/\\\\/g, '/')\r\n    : fs.existsSync(evoGif)\r\n      ? path.relative(process.env.APP_ROOT, evoGif).replace(/\\\\/g, '/')\r\n      : ''\r\n\r\n  return { animacaoEvolucao, assetPet }\r\n})\r\n"],"names":["win"],"mappings":"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"}